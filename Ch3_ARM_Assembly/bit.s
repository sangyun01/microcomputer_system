    .data
string: .asciz "The result %08X (AND) %08X (BIC)"

    .text
    .global main
    .extern printf

main:
    push {lr}

    mov r5, #0x000000FF
    mov r6, #0xFFFFFFFF

    and r7, r5, r6
    @ r5 -> 000000FF
    @ r6 -> FFFFFFFF
    @ r7 -> r5, r6의 공통된 비트 000000FF가 나온다. -> 000000FF + 1 = 0000 0100 = 16^2 = 256 -> 256 - 1 = 255
    @ r5의 경우 실제로는 0000 / 0000 / 0000 / 0000 / 0000 / 0000 / 1111 / 1111 -> 255
    @ r6의 경우 실제로는 1111 / 1111 / 1111 / 1111 / 1111 / 1111 / 1111 / 1111 
    @ r7의 경우 이와같이 0000 / 0000 / 0000 / 0000 / 0000 / 0000 / 1111 / 1111

    bic r8, r5, r6
    @ r5 -> 000000FF
    @ ~r6 -> 00000000
    @ r7 -> r5, ~r6의 공통된 비트 0000000가 나온다.
    @ r5의 경우 : 0000 / 0000 / 0000 / 0000 / 0000 / 0000 / 1111 / 1111
    @ r6의 경우 : 0000 / 0000 / 0000 / 0000 / 0000 / 0000 / 0000 / 0000
    @ r7의 경우 : 0000 / 0000 / 0000 / 0000 / 0000 / 0000 / 0000 / 0000

    ldr r0, =string
    mov r1, r7
    mov r2, r8

    bl printf
    pop {pc}